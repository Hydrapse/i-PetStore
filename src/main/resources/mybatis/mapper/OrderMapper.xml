<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.ipetstore.mapper.OrderMapper">
    <select id="getOrdersByUsername" parameterType="String" resultType="Order">
        SELECT
            BILLADDR1 AS billAddress1 ,
            BILLADDR2 AS billAddress2 ,
            BILLCITY ,
            BILLCOUNTRY ,
            BILLSTATE ,
            BILLTOFIRSTNAME ,
            BILLTOLASTNAME ,
            BILLZIP ,
            SHIPADDR1 AS shipAddress1 ,
            SHIPADDR2 AS shipAddress2 ,
            SHIPCITY ,
            SHIPCOUNTRY ,
            SHIPSTATE ,
            SHIPTOFIRSTNAME ,
            SHIPTOLASTNAME ,
            SHIPZIP ,
            CARDTYPE ,
            COURIER ,
            CREDITCARD ,
            EXPRDATE AS expiryDate ,
            LOCALE ,
            ORDERDATE ,
            ORDERS.ORDERID ,
            TOTALPRICE ,
            USERID AS username ,
            STATUS  
        FROM ORDERS, ORDERSTATUS
        WHERE ORDERS.USERID = #{username}
        AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
        ORDER BY ORDERDATE
    </select>

    <select id="getOrder" parameterType="int" resultType="Order">
        SELECT
            BILLADDR1 AS billAddress1 ,
            BILLADDR2 AS billAddress2 ,
            BILLCITY ,
            BILLCOUNTRY ,
            BILLSTATE ,
            BILLTOFIRSTNAME ,
            BILLTOLASTNAME ,
            BILLZIP ,
            SHIPADDR1 AS shipAddress1 ,
            SHIPADDR2 AS shipAddress2 ,
            SHIPCITY ,
            SHIPCOUNTRY ,
            SHIPSTATE ,
            SHIPTOFIRSTNAME ,
            SHIPTOLASTNAME ,
            SHIPZIP ,
            CARDTYPE ,
            COURIER ,
            CREDITCARD ,
            EXPRDATE AS expiryDate ,
            LOCALE ,
            ORDERDATE ,
            ORDERS.ORDERID ,
            TOTALPRICE ,
            USERID AS username ,
            STATUS
        FROM ORDERS, ORDERSTATUS
        WHERE ORDERS.ORDERID = #{orderId}
        AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
    </select>

    <insert id="insertOrder" parameterType="Order">
        INSERT INTO ORDERS
            (ORDERID, USERID, ORDERDATE,
            SHIPADDR1, SHIPADDR2, SHIPCITY, SHIPSTATE, SHIPZIP, SHIPCOUNTRY,
            BILLADDR1, BILLADDR2,BILLCITY, BILLSTATE, BILLZIP, BILLCOUNTRY,
            COURIER, TOTALPRICE, BILLTOFIRSTNAME,BILLTOLASTNAME,
            SHIPTOFIRSTNAME, SHIPTOLASTNAME, CREDITCARD, EXPRDATE, CARDTYPE, LOCALE)
        VALUES
             (#{orderId}, #{username}, #{orderDate},
              #{shipAddress1}, #{shipAddress2,jdbcType=VARCHAR}, #{shipCity}, #{shipState}, #{shipZip}, #{shipCountry},
              #{billAddress1}, #{billAddress2,jdbcType=VARCHAR}, #{billCity}, #{billState}, #{billZip}, #{billCountry},
              #{courier}, #{totalPrice}, #{billToFirstName}, #{billToLastName},
              #{shipToFirstName}, #{shipToLastName}, #{creditCard}, #{expiryDate}, #{cardType}, #{locale})
    </insert>
    
    <insert id="insertOrderStatus">
        INSERT INTO ORDERSTATUS
            (ORDERID, LINENUM, TIMESTAMP, STATUS)
        VALUES
            (#{order.orderId,jdbcType=NUMERIC}, #{lineNum,jdbcType=NUMERIC}, #{order.orderDate,jdbcType=TIMESTAMP}, #{order.status,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteOrderByOrderId" parameterType="int">
        DELETE t1, t2
        FROM ORDERS t1 LEFT JOIN ORDERSTATUS t2
        ON t1.ORDERID = t2.ORDERID
        WHERE t1.ORDERID = #{orderId}
    </delete>

    <update id="setOrderStatus" parameterType="Order">
        UPDATE ORDERSTATUS
        SET STATUS = #{status}
        WHERE ORDERID = #{orderId}
    </update>

    <select id="getOrdersByItemId" resultType="Order">
        SELECT
            BILLADDR1 AS billAddress1 ,
            BILLADDR2 AS billAddress2 ,
            BILLCITY ,
            BILLCOUNTRY ,
            BILLSTATE ,
            BILLTOFIRSTNAME ,
            BILLTOLASTNAME ,
            BILLZIP ,
            SHIPADDR1 AS shipAddress1 ,
            SHIPADDR2 AS shipAddress2 ,
            SHIPCITY ,
            SHIPCOUNTRY ,
            SHIPSTATE ,
            SHIPTOFIRSTNAME ,
            SHIPTOLASTNAME ,
            SHIPZIP ,
            CARDTYPE ,
            COURIER ,
            CREDITCARD ,
            EXPRDATE AS expiryDate ,
            LOCALE ,
            ORDERDATE ,
            ORDERS.ORDERID ,
            TOTALPRICE ,
            USERID AS username ,
            STATUS
        FROM ORDERS INNER JOIN (
            SELECT ORDERSTATUS.ORDERID, STATUS
			FROM ORDERSTATUS INNER JOIN LINEITEM ON ORDERSTATUS.ORDERID = LINEITEM.orderid
			WHERE STATUS = #{status}
			AND itemid = #{itemId}
        )   AS TEMP
		ON ORDERS.ORDERID = TEMP.ORDERID
    </select>

    <select id="getOrdersByOrderRequest" resultType="Order">
        SELECT
            BILLADDR1 AS billAddress1 ,
            BILLADDR2 AS billAddress2 ,
            BILLCITY ,
            BILLCOUNTRY ,
            BILLSTATE ,
            BILLTOFIRSTNAME ,
            BILLTOLASTNAME ,
            BILLZIP ,
            SHIPADDR1 AS shipAddress1 ,
            SHIPADDR2 AS shipAddress2 ,
            SHIPCITY ,
            SHIPCOUNTRY ,
            SHIPSTATE ,
            SHIPTOFIRSTNAME ,
            SHIPTOLASTNAME ,
            SHIPZIP ,
            CARDTYPE ,
            COURIER ,
            CREDITCARD ,
            EXPRDATE AS expiryDate ,
            LOCALE ,
            ORDERDATE ,
            ORDERS.ORDERID ,
            TOTALPRICE ,
            USERID AS username ,
            STATUS
        FROM ORDERS, ORDERSTATUS
        WHERE ORDERS.ORDERID = ORDERSTATUS.ORDERID
        and date(ORDERDATE) between #{startDate} and #{endDate}
        <if test="username != null and username != ''">
            and USERID like '%${username}%'
        </if>
        <if test="status != null and status != ''">
            and STATUS = UPPER(#{status})
        </if>
        ORDER BY ORDERDATE
    </select>

</mapper>